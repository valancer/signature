@import url(lgsmha.css);
@import url(magnific-popup.css);
/**
 * variable
 */
body {
  min-width: 320px;
  background-color: #fff; }

/* Common Style */
* {
  margin: 0;
  padding: 0; }

/* set html5 elements to block */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, address, cite, code, del, dfn, em, font, img, ins, q, s, samp, strike, strong, sub, sup, dl, dt, dd, ol, ul, li, fieldset, form, label, legend {
  border: 0 none; }

body {
  position: relative;
  /*min-height: 800px;*/
  min-width: 320px;
  margin: 0 auto;
  font-size: 100%;
  line-height: 1.3em;
  font-family: "LGSmHa", sans-serif;
  -ms-text-size-adjust: 100%;
      text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

header, h1 {
  font-size: 100%; }

html, body {
  height: 100%; }

caption, legend {
  position: absolute;
  top: -9999px;
  left: -9999px;
  width: 0;
  height: 0;
  font-size: 0;
  overflow: hidden;
  visibility: hidden; }

caption {
  display: none; }

img {
  border: none;
  vertical-align: top;
  /*width: 100%;*/ }

select, input {
  vertical-align: top; }

hr {
  display: none;
  border: 0 none; }

ol, ul, ul li {
  list-style: none; }

em {
  font-style: normal; }

menu li {
  list-style: none; }

address {
  display: inline;
  font-style: normal; }

button {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  border: 0px;
  background-color: transparent; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input, textarea, keygen, select, button {
  font-family: "LGSmHa", sans-serif; }

strong {
  font-weight: normal; }

dfn {
  font-style: normal; }

/* link Style */
a:link, a:visited, a:active, a:focus {
  text-decoration: none; }

a:hover {
  text-decoration: none; }

.hidden {
  display: none !important; }

.visible-hidden {
  visibility: hidden !important; }

.clear {
  clear: both; }

.txt-center {
  text-align: center !important; }

/* forms */
fieldset {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }

input[type=submit] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  border: 0px; }

::-webkit-input-placeholder {
  color: #4c4c4c; }

:-moz-placeholder {
  /* Firefox 18- */
  color: #4c4c4c; }

::-moz-placeholder {
  /* Firefox 19+ */
  color: #4c4c4c; }

:-ms-input-placeholder {
  color: #4c4c4c; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
/**
 * z-index
**/
/**
 * mixin
 */
/**
 * import
 */
/* FOOTER */
.footer {
  margin: 0 auto;
  min-width: 320px;
  height: 100px;
  background-color: #111; }
  .footer > .inner {
    padding: 0 100px;
    font-size: 11px;
    color: #fff;
    line-height: 100px; }

/* CONTENTS */
article.contents {
  margin: 0 auto;
  padding: 100px;
  min-width: 320px; }

.header {
  position: relative;
  overflow: hidden;
  margin: 0 auto;
  max-width: 768px;
  min-width: 320px; }
  .header .btn-lg-signature {
    display: block;
    position: absolute;
    top: 20px;
    left: 15px;
    z-index: 1;
    text-indent: -9999px;
    background-image: url(/assets/images/mobile/sprites_mobile.png);
    background-position: -95px 0px;
    width: 94px;
    height: 10px; }
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
      .header .btn-lg-signature {
        background-image: url(/assets/images/mobile/sprites_mobile@2x.png);
        background-size: 189px 102px; } }

body.main .header figure .photo {
  height: 340px; }
  body.main .header figure .photo img {
    width: 100%; }
  body.main .header figure .photo .title {
    display: block;
    position: absolute;
    top: 50%;
    margin-top: -32px;
    height: 64px;
    width: 100%;
    font-size: 30px;
    color: #fffffe;
    line-height: 1em;
    text-align: center; }
    body.main .header figure .photo .title small {
      font-size: 15px; }

body.main .header figure figcaption {
  background-color: #191919; }
  body.main .header figure figcaption .list-menus {
    display: block;
    overflow: hidden;
    padding: 15px 10px;
    background-color: #0f0; }
    body.main .header figure figcaption .list-menus > li {
      display: block;
      float: left;
      width: 33%; }
      body.main .header figure figcaption .list-menus > li a {
        display: block;
        font-size: 10px;
        color: #fff;
        line-height: 13px; }
