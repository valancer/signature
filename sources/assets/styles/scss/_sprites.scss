/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$sd-bg-nav01-name: 'sd-bg_nav01';
$sd-bg-nav01-x: 0px;
$sd-bg-nav01-y: 0px;
$sd-bg-nav01-offset-x: 0px;
$sd-bg-nav01-offset-y: 0px;
$sd-bg-nav01-width: 80px;
$sd-bg-nav01-height: 80px;
$sd-bg-nav01-total-width: 316px;
$sd-bg-nav01-total-height: 166px;
$sd-bg-nav01-image: '/assets/images/sprites.png';
$sd-bg-nav01: (0px, 0px, 0px, 0px, 80px, 80px, 316px, 166px, '/assets/images/sprites.png', 'sd-bg_nav01', );
$sd-bg-nav02-name: 'sd-bg_nav02';
$sd-bg-nav02-x: 86px;
$sd-bg-nav02-y: 0px;
$sd-bg-nav02-offset-x: -86px;
$sd-bg-nav02-offset-y: 0px;
$sd-bg-nav02-width: 80px;
$sd-bg-nav02-height: 80px;
$sd-bg-nav02-total-width: 316px;
$sd-bg-nav02-total-height: 166px;
$sd-bg-nav02-image: '/assets/images/sprites.png';
$sd-bg-nav02: (86px, 0px, -86px, 0px, 80px, 80px, 316px, 166px, '/assets/images/sprites.png', 'sd-bg_nav02', );
$sd-bg-nav03-name: 'sd-bg_nav03';
$sd-bg-nav03-x: 0px;
$sd-bg-nav03-y: 86px;
$sd-bg-nav03-offset-x: 0px;
$sd-bg-nav03-offset-y: -86px;
$sd-bg-nav03-width: 80px;
$sd-bg-nav03-height: 80px;
$sd-bg-nav03-total-width: 316px;
$sd-bg-nav03-total-height: 166px;
$sd-bg-nav03-image: '/assets/images/sprites.png';
$sd-bg-nav03: (0px, 86px, 0px, -86px, 80px, 80px, 316px, 166px, '/assets/images/sprites.png', 'sd-bg_nav03', );
$sd-signature-name: 'sd-signature';
$sd-signature-x: 172px;
$sd-signature-y: 0px;
$sd-signature-offset-x: -172px;
$sd-signature-offset-y: 0px;
$sd-signature-width: 144px;
$sd-signature-height: 14px;
$sd-signature-total-width: 316px;
$sd-signature-total-height: 166px;
$sd-signature-image: '/assets/images/sprites.png';
$sd-signature: (172px, 0px, -172px, 0px, 144px, 14px, 316px, 166px, '/assets/images/sprites.png', 'sd-signature', );
$spritesheet-width: 316px;
$spritesheet-height: 166px;
$spritesheet-image: '/assets/images/sprites.png';
$spritesheet-sprites: ($sd-bg-nav01, $sd-bg-nav02, $sd-bg-nav03, $sd-signature, );
$spritesheet: (316px, 166px, '/assets/images/sprites.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
